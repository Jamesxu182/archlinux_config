# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $Up l
set $Down k
set $Left j
set $Right semicolon

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# this font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:dejavu sans mono 8

# before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-c-70-iso10646-1
# the font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. however, its unicode glyph coverage is limited, the old
# x core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# hard contrast: background = #1d2021
set $background #282828
# soft contrast: background = #32302f
set $foreground #ebdbb2
set $foreground_bold #ebdbb2

# dark0 + gray
set $color0 #282828
set $color8 #928374

# neutral_red + bright_red
set $color1 #cc241d
set $color9 #fb4934

# neutral_green + bright_green
set $color2 #98971a
set $color10 #b8bb26

# neutral_yellow + bright_yellow
set $color3 #d79921
set $color11 #fabd2f

# neutral_blue + bright_blue
set $color4 #458588
set $color12 #83a598

# neutral_purple + bright_purple
set $color5 #b16286
set $color13 #d3869b

# neutral_aqua + faded_aqua
set $color6 #689d6a
set $color14 #8ec07c

# light4 + light1
set $color7 #a89984
set $color15 #ebdbb2

# use mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# there also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. it is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='dmenu -i -nb "$background" -nf "$foreground" -sb "$color4" -sf "$color0"'
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+left focus left
bindsym $mod+down focus down
bindsym $mod+up focus up
bindsym $mod+right focus right

# move focused window
bindsym $mod+shift+j move left
bindsym $mod+shift+k move down
bindsym $mod+shift+l move up
bindsym $mod+shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+shift+left move left
bindsym $mod+shift+down move down
bindsym $mod+shift+up move up
bindsym $mod+shift+right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# set workspace title
# set $workspace1 1: www
# set $workspace2 2: code
# set $workspace3 3: file
# set $workspace4 4: vm
# set $workspace5 5: mail
# set $workspace6 6: irc
# set $workspace7 7: media
# set $workspace8 8: monitor
# set $workspace9 9: misc
# set $workspace10 10: spotify

set $workspace1 1: 
set $workspace2 2: 
set $workspace3 3: 
set $workspace4 4: 
set $workspace5 5: 
set $workspace6 6: 
set $workspace7 7: 
set $workspace8 8: 
set $workspace9 9: 
set $workspace10 10: 

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+shift+1 move container to workspace $workspace1
bindsym $mod+shift+2 move container to workspace $workspace2
bindsym $mod+shift+3 move container to workspace $workspace3
bindsym $mod+shift+4 move container to workspace $workspace4
bindsym $mod+shift+5 move container to workspace $workspace5
bindsym $mod+shift+6 move container to workspace $workspace6
bindsym $mod+shift+7 move container to workspace $workspace7
bindsym $mod+shift+8 move container to workspace $workspace8
bindsym $mod+shift+9 move container to workspace $workspace9
bindsym $mod+shift+0 move container to workspace $workspace10

# reload the configuration file
bindsym $mod+shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+shift+r restart
# exit i3 (logs you out of your x session)
bindsym $mod+shift+e exec "i3-nagbar -t warning -m 'you pressed the exit shortcut. do you really want to exit i3? this will end your x session.' -b 'yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
set $resize_mode resize: (j / left) shrink width, (k / down) grow height, (l / up) shrink height, (; / right) grow width
mode "$resize_mode" {
        # these bindings trigger as soon as you enter the resize mode

        # pressing left will shrink the window’s width.
        # pressing right will grow the window’s width.
        # pressing up will shrink the window’s height.
        # pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: enter or escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "$resize_mode"

set $mode_system system: (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (shift+s) shutdown
mode "$mode_system" {
    # bindsym l exec --no-startup-id betterlockscreen -l dim, mode "default"
    bindsym l exec --no-startup-id light-locker-command -l, mode "default"
    bindsym e exec --no-startup-id i3msg exit, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id reboot, mode "default"
    bindsym shift+s exec --no-startup-id poweroff, mode "default"

    # back to normal: enter or escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Escape mode "$mode_system"

set $mode_player players: (n) next, (p) previous, (shift+p) play/pause, (s) stop
mode "$mode_player" {
    bindsym n exec --no-startup-id playerctl next
    bindsym p exec --no-startup-id playerctl previous
    bindsym shift+p exec --no-startup-id playerctl play-pause, mode "default"
    bindsym s exec --no-startup-id playerctl stop, mode "stop", mode "default"

    # back to normal: enter or escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+p mode "$mode_player"

set $mode_settings settings: (o) pulseaudio sink (output), (i) pulseaudio source (input), (x) xrandr
mode "$mode_settings" {
    bindsym o exec --no-startup-id idx=$(pamixer --list-sinks | awk -F'"' '{if (NR > 1) print $1 $4}' | dmenu -p "PulseAudio Sink: " | awk '{print $1}') && pamixer --sink $idx, mode "default"
    bindsym i exec --no-startup-id idx=$(pamixer --list-sources | awk -F'"' '{if (NR > 1) print $1 $4}' | dmenu -p "PulseAudio Source: " | awk '{print $1}') && pamixer --source $idx, mode "default"
    bindsym x exec --no-startup-id profile=$(autorandr --current | dmenu -p "XRandr Profile: ") && autorandr --load $profile, mode "default"

    # back to normal: enter or escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+z mode "$mode_settings"


smart_gaps on
smart_borders on

gaps inner 20

# define color scheme of client
# client.focused $color4 $color4 $color0 $color0
# client.focused_inactive $color0 $color0 $color8 $color8
# client.unfocused $color0 $color0 $color8 $color8
# client.urgent $color1 $color1 $color0 $color0

# start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        i3bar_command i3bar -t
        status_command i3status
        # status_command python /usr/lib/python3.7/site-packages/powerline/bindings/i3/powerline-i3.py
        position top
        font pango:dejavu sans mono for powerline, awesome 8

        # status_command i3status-rs /home/james/.config/i3/config.toml
        # define color scheme for i3 bar
        # colors {
            # separator $color8
            # background $background
            # statusline $foreground
            # focused_workspace $color4 $color4 $color0
            # active_workspace $color8 $color8 color3
            # inactive_workspace $color0 $color0 color8
            # urgent_workspace $color1 $color1 $color0
        # }
}

# Function Button Key Bind
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioRaiseVolume exec pamixer -i 5

bindsym shift+XF86AudioLowerVolume exec pamixer --default-source -d 5
bindsym shift+XF86AudioRaiseVolume exec pamixer --default-source -i 5

bindsym XF86AudioMute exec pamixer -t
bindsym XF86AudioMicMute exec pamixer --default-source -t

bindsym XF86MonBrightnessDown exec xbacklight -dec 5
bindsym XF86MonBrightnessUp exec xbacklight -inc 5

bindsym XF86Display exec arandr
bindsym XF86Tools exec i3-sensible-terminal -e zsh -c "vim .config/i3/config"

bindsym XF86Favorites exec i3-sensible-terminal -e zsh -c "xdg-open ~/Downloads"

# bindsym $mod+n exec conn=$(nmcli conn show | awk 'FNR > 1 {print $1}' | dmenu -p "WiFi Connections: " -nb "$background" -nf "$foreground" -sb "$color4" -sf "$color0") && nmcli conn up $conn
bindsym $mod+n exec conn=$(nmcli conn show | awk 'FNR > 1 {print $1}' | dmenu -p "WiFi Connections: ") && nmcli conn up $conn

# Browser
# bindsym $mod+b exec uzbl-tabbed
bindsym $mod+b exec luakit

# Rofi
# bindsym $mod+Tab exec --no-startup-id rofi -combi-modi window -font "DejaVu Sans Mono 14" -show combi -show-icons

# switch between the pervious window
bindsym $mod+Tab workspace back_and_forth 

bindsym $mod+o exec --no-startup-id idx=$(pamixer --list-sinks | awk -F'"' '{if (NR > 1) print $1 $4}' | dmenu -p "PulseAudio Sink: " | awk '{print $1}') && pamixer --sink $idx
bindsym $mod+i exec --no-startup-id idx=$(pamixer --list-sources | awk -F'"' '{if (NR > 1) print $1 $4}' | dmenu -p "PulseAudio Source: " | awk '{print $1}') && pamixer --source $idx
bindsym $mod+x exec --no-startup-id profile=$(autorandr --current | dmenu -p "XRandr Profile: ") && autorandr --load $profile

# Autostart dunst for notification daemon
exec --no-startup-id dunst

# Autostart polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Autostart caffeine
exec --no-startup-id caffeine

# Compton
exec --no-startup-id compton

# Wallpaper
exec --no-startup-id feh --bg-fill $HOME/Pictures/Wallpaper/wallpaper.jpg

# udiskie for auto mount
exec --no-startup-id udiskie

# Screenshot
bindsym Print exec scrot '%Y-%m-%d-%s_screenshot_$wx$h.jpg' -e 'xclip -selection c -t image/png < $f'

bindsym $mod+Print exec scrot -s '%Y-%m-%d-%s_screenshot_$wx$h.jpg' -e 'xclip -selection c -t image/png < $f'

# Autolock
# exec --no-startup-id xautolock -time 5 -locker "betterlockscreen -l blur"
# exec --no-startup-id xss-lock -- /usr/bin/betterlockscreen -l dim
exec --no-startup-id light-locker

# Assign application to specific workspace
# assign [class="Firefox"] $workspace1
# assign [class="Atom"] $workspace2
# assign [class="Eclipse"] $workspace2
#
for_window [class=".*"] border pixel 2
for_window [class="Spotify"] move to workspace $workspace10

focus_on_window_activation urgent

# HDMI
# exec --no-startup-id xrandr --output HDMI1 --mode 2560x1440 --above eDP1
bindsym $mod+m move workspace to output HDMI1
bindsym $mod+Shift+m move workspace to output eDP1
